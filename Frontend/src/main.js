import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import "bootstrap/dist/css/bootstrap.rtl.min.css";
import "bootstrap/dist/js/bootstrap.bundle.min.js";
import "./index.css";
import App from "./App.tsx";
import { createBrowserRouter, createRoutesFromElements, Route, RouterProvider, } from "react-router-dom";
import { Provider } from "react-redux";
import Home from "./components/Home.tsx";
import store from "./app/store.ts";
import PrivateRoute from "./components/PrivateRoute.tsx";
import Login from "./features/users/Login.tsx";
import UsersList from "./features/users/UsersList.tsx";
import DoctorsList from "./features/doctors/DoctorsList.tsx";
import DoctorDetails from "./features/doctors/DoctorDetails.tsx";
import SchedulesList from "./features/doctorScheduls/SchedulesList.tsx";
import PatientsList from "./features/patients/PatientsList.tsx";
import PatientDetails from "./features/patients/PatientDetails.tsx";
import AppointmentsList from "./features/appointments/AppointmentsList.tsx";
import AppointmentDetails from "./features/appointments/AppointmentDetails.tsx";
import TestsList from "./features/labTests/TestsList.tsx";
import TestDetails from "./features/labTests/TestDetails.tsx";
import DiagnosesList from "./features/diganoses/DiagnosesList.tsx";
import PrescriptionsList from "./features/prescriptions/PrescriptionsList.tsx";
import PrescriptionDetails from "./features/prescriptions/PrescriptionDetails.tsx";
import BillingsList from "./features/billings/BillingsList.tsx";
import BillingDetails from "./features/billings/BillingDetails.tsx";
import InventoriesList from "./features/inventories/InventoriesList.tsx";
import InventoryDetails from "./features/inventories/InventoryDetails.tsx";
import SuppliersList from "./features/suppliers/SuppliersList.tsx";
import SupplierDetails from "./features/suppliers/SupplierDetails.tsx";
import LogsList from "./features/inventoryLogs/LogsList.tsx";
import TypesList from "./features/appointments/TypesList.tsx";
import TypeDetails from "./features/appointments/TypeDetails.tsx";
import PrintPrescriptions from "./features/appointments/print/PrintPrescriptions.tsx";
import PrintTests from "./features/appointments/print/PrintTests.tsx";
import PrintBill from "./features/appointments/print/PrintBill.tsx";
//Routes
const router = createBrowserRouter(createRoutesFromElements(_jsxs(Route, { path: "/", element: _jsx(App, {}), children: [_jsx(Route, { path: "/", index: true, element: _jsx(Home, {}) }), _jsx(Route, { path: "/login", element: _jsx(Login, {}) }), _jsxs(Route, { path: "/", element: _jsx(PrivateRoute, {}), children: [_jsx(Route, { path: "/users", children: _jsx(Route, { path: "/users", index: true, element: _jsx(UsersList, {}) }) }), _jsxs(Route, { path: "/doctors", children: [_jsx(Route, { path: "/doctors", index: true, element: _jsx(DoctorsList, {}) }), _jsx(Route, { path: "/doctors/:id", index: true, element: _jsx(DoctorDetails, {}) })] }), _jsx(Route, { path: "/schedules", children: _jsx(Route, { path: "/schedules", index: true, element: _jsx(SchedulesList, {}) }) }), _jsxs(Route, { path: "/patients", children: [_jsx(Route, { path: "/patients", index: true, element: _jsx(PatientsList, {}) }), _jsx(Route, { path: "/patients/:id", element: _jsx(PatientDetails, {}) })] }), _jsxs(Route, { path: "/appointments", children: [_jsx(Route, { path: "/appointments", index: true, element: _jsx(AppointmentsList, {}) }), _jsx(Route, { path: "/appointments/:id", element: _jsx(AppointmentDetails, {}) }), _jsx(Route, { path: "/appointments/:id/print-pres", element: _jsx(PrintPrescriptions, {}) }), _jsx(Route, { path: "/appointments/:id/print-tests", element: _jsx(PrintTests, {}) }), _jsx(Route, { path: "/appointments/:billId/print-bill", element: _jsx(PrintBill, {}) }), _jsx(Route, { path: "/appointments/types", element: _jsx(TypesList, {}) }), _jsx(Route, { path: "/appointments/types/:id", element: _jsx(TypeDetails, {}) })] }), _jsxs(Route, { path: "/labtests", children: [_jsx(Route, { path: "/labtests", index: true, element: _jsx(TestsList, {}) }), _jsx(Route, { path: "/labtests/:id", element: _jsx(TestDetails, {}) })] }), _jsx(Route, { path: "/diagnoses", children: _jsx(Route, { path: "/diagnoses", index: true, element: _jsx(DiagnosesList, {}) }) }), _jsxs(Route, { path: "/prescriptions", children: [_jsx(Route, { path: "/prescriptions", index: true, element: _jsx(PrescriptionsList, {}) }), _jsx(Route, { path: "/prescriptions/:id", element: _jsx(PrescriptionDetails, {}) })] }), _jsxs(Route, { path: "/bills", children: [_jsx(Route, { path: "/bills", index: true, element: _jsx(BillingsList, {}) }), _jsx(Route, { path: "/bills/:id", element: _jsx(BillingDetails, {}) })] }), _jsx(Route, { path: "/inventories", children: _jsx(Route, { path: "/inventories", index: true, element: _jsx(InventoriesList, {}) }) }), _jsx(Route, { path: "/inventories/:id", element: _jsx(InventoryDetails, {}) })] }), _jsxs(Route, { path: "/suppliers", children: [_jsx(Route, { path: "/suppliers", index: true, element: _jsx(SuppliersList, {}) }), _jsx(Route, { path: "/suppliers/:id", element: _jsx(SupplierDetails, {}) })] }), _jsx(Route, { path: "/invlogs", children: _jsx(Route, { path: "/invlogs", index: true, element: _jsx(LogsList, {}) }) })] })));
createRoot(document.getElementById("root")).render(_jsx(Provider, { store: store, children: _jsx(StrictMode, { children: _jsx(RouterProvider, { router: router }) }) }));
